"use client";
import { useEffect, useState } from "react";
import styles from "../styles/CommentsSection.module.css";
import { createComment, getCommentsByFood } from "@/services/comment.service";

export default function CommentsSection({ foodId }) {
  const [comments, setComments] = useState([]);
  const [content, setContent] = useState("");

  const fetchComments = async () => {
    const data = await getCommentsByFood(foodId);
    setComments(data);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!content.trim()) return;

    await createComment({ foodId, content });
    setContent("");
    fetchComments(); // refresh
    console.log("G·ª≠i b√¨nh lu·∫≠n cho m√≥n:", foodId, content);
  };

  useEffect(() => {
    fetchComments();
  }, []);

  return (
    // S·ª≠ d·ª•ng class CSS t·ª´ module cho container ch√≠nh
    <div className={styles.commentSectionContainer}>
      {/* S·ª≠ d·ª•ng class CSS cho ti√™u ƒë·ªÅ */}
      <h2>üí¨ B√¨nh lu·∫≠n</h2>

      {/* Form g·ª≠i b√¨nh lu·∫≠n */}
      {/* Thay th·∫ø c√°c class Tailwind m·∫∑c ƒë·ªãnh b·∫±ng class t·ª´ module */}
      <form onSubmit={handleSubmit} className={styles.commentForm}>
        <textarea // ƒê·ªïi t·ª´ input type="text" sang textarea ƒë·ªÉ nh·∫≠p ƒë∆∞·ª£c nhi·ªÅu d√≤ng h∆°n
          className={styles.commentForm + " " + styles.commentForm + " " + styles.textarea} // S·ª≠ d·ª•ng class c·ªßa textarea trong module
          placeholder="Vi·∫øt b√¨nh lu·∫≠n c·ªßa b·∫°n..."
          value={content}
          onChange={(e) => setContent(e.target.value)}
          required // ƒê·∫£m b·∫£o ng∆∞·ªùi d√πng ph·∫£i nh·∫≠p n·ªôi dung
        />
        {/* S·ª≠ d·ª•ng class CSS cho n√∫t g·ª≠i, v√† thay ƒë·ªïi m√†u th√†nh xanh l√° c√¢y */}
        <button type="submit" className={styles.commentForm + " " + styles.button}>
          G·ª≠i B√¨nh Lu·∫≠n
        </button>
      </form>

      {comments.length === 0 ? (
        <p>Ch∆∞a c√≥ b√¨nh lu·∫≠n n√†o.</p>
      ) : (
        // S·ª≠ d·ª•ng class CSS cho danh s√°ch b√¨nh lu·∫≠n
        <div className={styles.commentsList}>
          {comments.map((comment) => (
            // S·ª≠ d·ª•ng class CSS cho t·ª´ng b√¨nh lu·∫≠n
            <div key={comment._id} className={styles.commentItem}>
              <p className={styles.commentAuthor}>
                {comment.user?.username || "·∫®n danh"}
                <span className={styles.commentDate}>
                  {new Date(comment.createdAt).toLocaleString("vi-VN")}
                </span>
              </p>
              <p className={styles.commentText}>{comment.content}</p>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
